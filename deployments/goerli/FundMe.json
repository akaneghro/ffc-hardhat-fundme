{
  "address": "0x1f4fDA976F7BdD6953E07bF498012022533Fe8A9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x8279da781a46df8fb4f85ff2fcc43ed29acb6c2e79ff5136db12b683a3e9c77f",
  "receipt": {
    "to": null,
    "from": "0xEa1710C36e8E48d1B85a4887CF27f0446c8A0205",
    "contractAddress": "0x1f4fDA976F7BdD6953E07bF498012022533Fe8A9",
    "transactionIndex": 94,
    "gasUsed": "914937",
    "logsBloom": "0x
    "blockHash": "0x34ec6c6240962a7c414d74d106cd4f374a39386b9943bb8cff8bcaacf805a558",
    "transactionHash": "0x8279da781a46df8fb4f85ff2fcc43ed29acb6c2e79ff5136db12b683a3e9c77f",
    "logs": [],
    "blockNumber": 8063403,
    "cumulativeGasUsed": "25750685",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 2,
  "solcInputHash": "c2615db537d1e8b27026d66f6c8642f2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"bertoaf\",\"details\":\"Implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Demo contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/**\\n * @title A contract for crowd funding\\n * @author bertoaf\\n * @notice Demo contract\\n * @dev Implements price feeds as our library\\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        address[] memory funders = s_funders;\\n\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunders(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(\\n        address funder\\n    ) public view returns (uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x5946942fc96b573e6a64ba73913bd78e7821d261aa91acbe58810cca2cebd240\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n// Why is this a library and not abstract?\\r\\n// Why not an interface?\\r\\nlibrary PriceConverter {\\r\\n    // We could make this public, but then we'd have to deploy it\\r\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        // ETH/USD rate in 18 digit\\r\\n        return uint256(answer * 10000000000);\\r\\n        // or (Both will do the same thing)\\r\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\r\\n    }\\r\\n\\r\\n    // 1000000000\\r\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\r\\n        // or (Both will do the same thing)\\r\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\r\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xd77d7d2a291f95dff201576870cc1a80c7a437ab6fab26ca9bddd05da56e71f1\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b506040516200109b3803806200109b83398181016040528101906100349190610115565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610142565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e2826100b7565b9050919050565b6100f2816100d7565b81146100fd57600080fd5b50565b60008151905061010f816100e9565b92915050565b60006020828403121561012b5761012a6100b2565b5b600061013984828501610100565b91505092915050565b60805160601c610f2c6200016f600039600081816102230152818161041901526104f60152610f2c6000f3fe6080604052600436106100705760003560e01c80636b69a5921161004e5780636b69a59214610106578063893d20e8146101315780639e87a5cd1461015c578063b60d42881461018757610070565b80630343fb25146100755780633a7b6c74146100b25780633ccfd60b146100ef575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190610864565b610191565b6040516100a991906108aa565b60405180910390f35b3480156100be57600080fd5b506100d960048036038101906100d491906108f1565b6101d9565b6040516100e6919061092d565b60405180910390f35b3480156100fb57600080fd5b50610104610221565b005b34801561011257600080fd5b5061011b6104e5565b60405161012891906108aa565b60405180910390f35b34801561013d57600080fd5b506101466104f2565b604051610153919061092d565b60405180910390f35b34801561016857600080fd5b5061017161051a565b60405161017e91906109a7565b60405180910390f35b61018f610544565b005b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600182815481106101ef576101ee6109c2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102a6576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561032a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116102e0575b5050505050905060005b81518110156103b4576000828281518110610352576103516109c2565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103ac90610a20565b915050610334565b50600067ffffffffffffffff8111156103d0576103cf610a69565b5b6040519080825280602002602001820160405280156103fe5781602001602082028036833780820191505090505b506001908051906020019061041492919061075a565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161045b90610ac9565b60006040518083038185875af1925050503d8060008114610498576040519150601f19603f3d011682016040523d82523d6000602084013e61049d565b606091505b50509050806104e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890610b3b565b60405180910390fd5b5050565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b1880000610583600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461067e90919063ffffffff16565b10156105c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bb90610ba7565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106129190610bc7565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008061068a836106ba565b90506000670de0b6b3a764000085836106a39190610c1d565b6106ad9190610ca6565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561070357600080fd5b505afa158015610717573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073b9190610d64565b5050509150506402540be400816107529190610ddf565b915050919050565b8280548282559060005260206000209081019282156107d3579160200282015b828111156107d25782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061077a565b5b5090506107e091906107e4565b5090565b5b808211156107fd5760008160009055506001016107e5565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061083182610806565b9050919050565b61084181610826565b811461084c57600080fd5b50565b60008135905061085e81610838565b92915050565b60006020828403121561087a57610879610801565b5b60006108888482850161084f565b91505092915050565b6000819050919050565b6108a481610891565b82525050565b60006020820190506108bf600083018461089b565b92915050565b6108ce81610891565b81146108d957600080fd5b50565b6000813590506108eb816108c5565b92915050565b60006020828403121561090757610906610801565b5b6000610915848285016108dc565b91505092915050565b61092781610826565b82525050565b6000602082019050610942600083018461091e565b92915050565b6000819050919050565b600061096d61096861096384610806565b610948565b610806565b9050919050565b600061097f82610952565b9050919050565b600061099182610974565b9050919050565b6109a181610986565b82525050565b60006020820190506109bc6000830184610998565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a2b82610891565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a5e57610a5d6109f1565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ab3600083610a98565b9150610abe82610aa3565b600082019050919050565b6000610ad482610aa6565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b25600b83610ade565b9150610b3082610aef565b602082019050919050565b60006020820190508181036000830152610b5481610b18565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610b91601b83610ade565b9150610b9c82610b5b565b602082019050919050565b60006020820190508181036000830152610bc081610b84565b9050919050565b6000610bd282610891565b9150610bdd83610891565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c1257610c116109f1565b5b828201905092915050565b6000610c2882610891565b9150610c3383610891565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c6c57610c6b6109f1565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610cb182610891565b9150610cbc83610891565b925082610ccc57610ccb610c77565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610cf681610cd7565b8114610d0157600080fd5b50565b600081519050610d1381610ced565b92915050565b6000819050919050565b610d2c81610d19565b8114610d3757600080fd5b50565b600081519050610d4981610d23565b92915050565b600081519050610d5e816108c5565b92915050565b600080600080600060a08688031215610d8057610d7f610801565b5b6000610d8e88828901610d04565b9550506020610d9f88828901610d3a565b9450506040610db088828901610d4f565b9350506060610dc188828901610d4f565b9250506080610dd288828901610d04565b9150509295509295909350565b6000610dea82610d19565b9150610df583610d19565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e3457610e336109f1565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e7157610e706109f1565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610eae57610ead6109f1565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610eeb57610eea6109f1565b5b82820290509291505056fea26469706673582212204b4e48470640a7c6b9b9077efba8ca987f716e0dce0d2feb31c928be0f12b29764736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c80636b69a5921161004e5780636b69a59214610106578063893d20e8146101315780639e87a5cd1461015c578063b60d42881461018757610070565b80630343fb25146100755780633a7b6c74146100b25780633ccfd60b146100ef575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190610864565b610191565b6040516100a991906108aa565b60405180910390f35b3480156100be57600080fd5b506100d960048036038101906100d491906108f1565b6101d9565b6040516100e6919061092d565b60405180910390f35b3480156100fb57600080fd5b50610104610221565b005b34801561011257600080fd5b5061011b6104e5565b60405161012891906108aa565b60405180910390f35b34801561013d57600080fd5b506101466104f2565b604051610153919061092d565b60405180910390f35b34801561016857600080fd5b5061017161051a565b60405161017e91906109a7565b60405180910390f35b61018f610544565b005b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600182815481106101ef576101ee6109c2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102a6576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561032a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116102e0575b5050505050905060005b81518110156103b4576000828281518110610352576103516109c2565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103ac90610a20565b915050610334565b50600067ffffffffffffffff8111156103d0576103cf610a69565b5b6040519080825280602002602001820160405280156103fe5781602001602082028036833780820191505090505b506001908051906020019061041492919061075a565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161045b90610ac9565b60006040518083038185875af1925050503d8060008114610498576040519150601f19603f3d011682016040523d82523d6000602084013e61049d565b606091505b50509050806104e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890610b3b565b60405180910390fd5b5050565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b1880000610583600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461067e90919063ffffffff16565b10156105c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bb90610ba7565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106129190610bc7565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008061068a836106ba565b90506000670de0b6b3a764000085836106a39190610c1d565b6106ad9190610ca6565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561070357600080fd5b505afa158015610717573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073b9190610d64565b5050509150506402540be400816107529190610ddf565b915050919050565b8280548282559060005260206000209081019282156107d3579160200282015b828111156107d25782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061077a565b5b5090506107e091906107e4565b5090565b5b808211156107fd5760008160009055506001016107e5565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061083182610806565b9050919050565b61084181610826565b811461084c57600080fd5b50565b60008135905061085e81610838565b92915050565b60006020828403121561087a57610879610801565b5b60006108888482850161084f565b91505092915050565b6000819050919050565b6108a481610891565b82525050565b60006020820190506108bf600083018461089b565b92915050565b6108ce81610891565b81146108d957600080fd5b50565b6000813590506108eb816108c5565b92915050565b60006020828403121561090757610906610801565b5b6000610915848285016108dc565b91505092915050565b61092781610826565b82525050565b6000602082019050610942600083018461091e565b92915050565b6000819050919050565b600061096d61096861096384610806565b610948565b610806565b9050919050565b600061097f82610952565b9050919050565b600061099182610974565b9050919050565b6109a181610986565b82525050565b60006020820190506109bc6000830184610998565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a2b82610891565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a5e57610a5d6109f1565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ab3600083610a98565b9150610abe82610aa3565b600082019050919050565b6000610ad482610aa6565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b25600b83610ade565b9150610b3082610aef565b602082019050919050565b60006020820190508181036000830152610b5481610b18565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610b91601b83610ade565b9150610b9c82610b5b565b602082019050919050565b60006020820190508181036000830152610bc081610b84565b9050919050565b6000610bd282610891565b9150610bdd83610891565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c1257610c116109f1565b5b828201905092915050565b6000610c2882610891565b9150610c3383610891565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c6c57610c6b6109f1565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610cb182610891565b9150610cbc83610891565b925082610ccc57610ccb610c77565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610cf681610cd7565b8114610d0157600080fd5b50565b600081519050610d1381610ced565b92915050565b6000819050919050565b610d2c81610d19565b8114610d3757600080fd5b50565b600081519050610d4981610d23565b92915050565b600081519050610d5e816108c5565b92915050565b600080600080600060a08688031215610d8057610d7f610801565b5b6000610d8e88828901610d04565b9550506020610d9f88828901610d3a565b9450506040610db088828901610d4f565b9350506060610dc188828901610d4f565b9250506080610dd288828901610d04565b9150509295509295909350565b6000610dea82610d19565b9150610df583610d19565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e3457610e336109f1565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e7157610e706109f1565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610eae57610ead6109f1565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610eeb57610eea6109f1565b5b82820290509291505056fea26469706673582212204b4e48470640a7c6b9b9077efba8ca987f716e0dce0d2feb31c928be0f12b29764736f6c63430008080033",
  "devdoc": {
    "author": "bertoaf",
    "details": "Implements price feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Demo contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}